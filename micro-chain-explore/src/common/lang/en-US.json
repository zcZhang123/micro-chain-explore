{
    "lan": "EN",
    "lan2": "English",
    "home": "HomePage",
    "copy": "Replicating Success",
    "copy_success": "Replicating Success",
    "copy_fail": "Replicating Failed",
    "title": "JingChuang MOAC APPChain Explorer",
    "ERC": "Token",
    "footer": "JingChuang MOAC APPChain Explorer | Hefei Jingchuang Digital Technology Co., Ltd",
    "blockNum": "Block Height",
    "more": "View More",
    "num": "Number",
    "txs": "Nums",
    "noData": "No data",
    "latestTx": "Latest Transaction",
    "blockNo": "Block Number",
    "seq": "NO",
    "txHash": "Txhash",
    "status": "Status",
    "txTime": "Time",
    "txType": "Type",
    "gas": "Total fee：",
    "gas_tip": "The AppChain can use running fuel, and the running out of fuel will affect the normal operation of the AppChain.",
    "status_tip": "Whether the AppChain flush is abnormal (green light: normal, red light: abnormal).",
    "bondLimit": "BondLimit：",
    "bondLimit_tip": "When SCS is selected by the AppChainin SCS pool, a deposit is required to verify the AppChain.",
    "blockReward": "BlockReward：",
    "blockReward_tip": "The benefits given to each block by the AppChain.",
    "txReward_tip": "In order to encourage SCS to verify more transactions, the AppChain provides rewards for each packaged transaction.",
    "txReward": "TxReward：",
    "viaReward_tip": "The AppChain rewards the vnode connection node.",
    "viaReward": "ViaReward：",
    "scs_tip": "The pool of storage AppChain miners is essentially a smart contract. SCS nodes need to be registered to join the verification of AppChain. After the AppChain is generated, it will be registered in an SCS pool, and the qualified SCS will be randomly selected to join the AppChain for verification.",
    "scs_title": "SCS：",
    "scs": "SCS",
    "search": "Please enter address / hash",
    "txs_title": "Transactions",
    "tx_curve": "Transactions Curve",
    "tx_statistics": "Statistics of blocks",
    "lastdays": "Last 90 days",
    "blocks": "Block nums",
    "current_block": "Current Block:",
    "block_hash": "Block Hash:",
    "date": "Date",
    "pre_block_hash": "Pre block hash",
    "transactions": "Transactions",
    "from": "From",
    "to": "To",
    "tx_type": "Type",
    "loading": "Loading",
    "success": "Success",
    "fail": "Fail",
    "sharding_flg0": "Execute master chain transaction",
    "sharding_flg1": "Execute contract",
    "sharding_flg2": "Original token of transfer",
    "sharding_flg3": "Deploy contract",
    "datetime": "Date:",
    "noTransactions": "No Transaction",
    "miner": "Miner",
    "filter": "Search",
    "start_time": "Start",
    "end_time": "End",
    "blockHash": "Block Hash",
    "search_token": "Please enter Token Name/Symbol/Address",
    "token_name": "Token Name",
    "token_address": "Token Address",
    "token_symbol": "Token Symbol",
    "token_deployer": "Token Deployer",
    "tokenName": "Name:",
    "tokenSymbol": "Symbol:",
    "tokenSupply": "TotalSupply:",
    "tokenDecimals": "Deciamls:",
    "tokenAddress": "Address:",
    "tokenDeployer": "Deployer:",
    "tokenHold": "Holding Rank",
    "percentage": "Percentage",
    "address": "Address",
    "hold_value": "Value",
    "live": "Live：",
    "txDetail": "Tx Detail",
    "current_hash": "Tx Hash:",
    "value": "Value",
    "token_transfer": "Token Transfer",
    "txInput": "Input",
    "contract_address": "Contract Address:",
    "logs": "Logs",
    "wallet_address": "Wallet Address:",
    "assets": "Assets",
    "txTo": "To:",
    "input_to": "Please enter transaction counterpart",
    "EncodeInput": "Encode",
    "DecodeInput": "Decode",
    "memo": "Memo："
}